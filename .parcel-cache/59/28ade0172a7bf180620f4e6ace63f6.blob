"use strict";

var helpers = require("../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");

var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = void 0;

  var _react = _interopRequireWildcard(require("react"));

  var _reactstrap = require("reactstrap");

  var _Distrito = _interopRequireDefault(require("./Distrito"));

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  const MODEL = 'distritos';
  const API_URL = "http://localhost:3000/api/" + MODEL;
  const HEADERS = new Headers({
    'Accept': 'application/json',
    'Content-Type': 'application/json'
  });

  class Ciudad extends _react.Component {
    constructor(props) {
      super(props);
      this.state = {
        lista: [],
        distrito: "",
        idDistrito: 0
      };
      this.cargaDatos = this.cargaDatos.bind(this);
      this.selectDistrito = this.selectDistrito.bind(this);
    }

    componentDidMount() {
      this.cargaDatos();
    }

    cargaDatos() {
      const options = {
        method: "GET",
        headers: HEADERS
      };
      fetch(API_URL + "?_sort=numDistrito", options).then(texto => texto.json()).then(datos => this.setState({
        lista: datos
      })).then(d => this.setState({
        distrito: this.state.lista[0].nombre,
        idDistrito: this.state.lista[0].iddistritos
      })).catch(error => console.log("se ha producido un error: ", error));
    }

    selectDistrito(distrito) {
      this.setState({
        distrito: distrito.nombre
      });
    }

    render() {
      const distritos = this.state.lista.map((el, i) => /*#__PURE__*/_react.default.createElement("th", {
        className: "btn btn-primary",
        key: i,
        onClick: () => this.selectDistrito(el)
      }, " ", el.nombre, " "));
      return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("h1", null, "Barcelona"), /*#__PURE__*/_react.default.createElement(_reactstrap.Table, null, /*#__PURE__*/_react.default.createElement("thead", null, /*#__PURE__*/_react.default.createElement("tr", null, distritos))), /*#__PURE__*/_react.default.createElement(_Distrito.default, {
        distrito: this.state.distrito
      }));
    }

  }

  var _default = Ciudad;
  exports.default = _default;
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}