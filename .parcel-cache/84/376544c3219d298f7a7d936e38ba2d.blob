"use strict";

var helpers = require("../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");

var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = void 0;

  var _react = _interopRequireDefault(require("react"));

  var _Login = _interopRequireDefault(require("./Login"));

  var _Alumnes = _interopRequireDefault(require("./Alumnes"));

  var _Ciudad = _interopRequireDefault(require("./Ciudad"));

  var _Cuerpo = _interopRequireDefault(require("./Cuerpo"));

  var _Cabecera = _interopRequireDefault(require("./Cabecera"));

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  const API_URL = "http://localhost:3000/api/";
  const HEADERS = new Headers({
    'Accept': 'application/json',
    'Content-Type': 'application/json'
  });

  class App extends _react.default.Component {
    constructor(props) {
      super(props);
      this.state = {
        loginState: "logedout",
        loginStates: {
          LOGEDOUT: "logedout",
          FAILED: "failed",
          LOGEDIN: "logedin"
        },
        id: 0,
        nombre: "",
        password: ""
      };
      this.logIn = this.logIn.bind(this); //this.logOut = this.logOut.bind(this);
      //this.loginFail = this.loginFail.bind(this);
    }
    /*logIn() {
      let dbUsuario;
       const opcions = {
        method: "GET",
        headers: HEADERS
      };
       fetch(API_URL + "usuarios/findOne?_where=(nombre,eq," + nombre + ")", opcions)
        .then(texto => texto.json())
        .then(usuarioData => dbUsuario = usuarioData[0])
        .then(x => this.setState({ id: dbUsuario.idUsuario }))
        .then(x => { dbUsuario.password == password  ? this.setState({ loginState: this.state.loginStates.LOGEDIN }) : this.loginFail() })
        .catch(error => {
          console.log("se ha producido un error: ", error)
          this.loginFail()
        });
    }
     loginFail() {
      console.log("Usuario o contraseÃ±a no validos")
      this.setState({
        id: 0,
        loginState: this.state.loginStates.FAILED,
        nombre: "",
        password: ""
      })
    }
     logOut() {
      this.setState({
        id: 0,
        loginState: this.state.loginStates.LOGEDOUT,
        nombre: "",
        password: ""
      })
    }*/


    logIn(idUsuario) {
      this.setState({
        id: idUsuario,
        loginState: this.state.loginStates.LOGEDIN
      });
    }

    render() {
      return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_Login.default, {
        logIn: this.logIn
      }), /*#__PURE__*/_react.default.createElement(_Cuerpo.default, null));
    }

  }

  var _default = App;
  /*export default () => (
    <>
      <Login />
      /////------<Cabecera />
      <Cuerpo />
    </>
  );*/

  exports.default = _default;
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}