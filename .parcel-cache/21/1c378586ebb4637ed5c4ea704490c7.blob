"use strict";

var helpers = require("../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");

var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = void 0;

  var _react = _interopRequireDefault(require("react"));

  var _reactstrap = require("reactstrap");

  require("./Login.css");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  const MODEL = 'usuarios';
  const API_URL = "http://localhost:3000/api/" + MODEL;
  const HEADERS = new Headers({
    'Accept': 'application/json',
    'Content-Type': 'application/json'
  });

  class Login extends _react.default.Component {
    constructor(props) {
      super(props);

      this.actualizaInputs = event => {
        const value = event.target.value;
        const name = event.target.name;
        this.setState({
          [name]: value
        });
      };

      this.state = {
        loginState: "",
        loginStates: {
          LOGEDOUT: "logedout",
          FAILED: "failed",
          LOGEDIN: "logedin"
        },
        id: 0,
        nombre: "",
        password: ""
      };
      this.newUser = this.newUser.bind(this);
      this.logIn = this.logIn.bind(this);
      this.logOut = this.logOut.bind(this);
      this.loginFail = this.loginFail.bind(this);
    }

    componentDidMount() {
      this.props.idUsuario > 0 ? this.setState({
        loginState: this.state.loginStates.LOGEDIN
      }) : this.setState({
        loginState: this.state.loginStates.LOGEDOUT
      });
      console.log(this.props.idUsuario);
    }

    logIn() {
      let usuarioData;
      const opcions = {
        method: "GET",
        headers: HEADERS
      };
      fetch(API_URL + "/findOne?_where=(nombre,eq," + this.state.nombre + ")", opcions).then(texto => texto.json()).then(dbUsuario => usuarioData = dbUsuario[0]).then(x => {
        usuarioData.password == this.state.password ? this.setState({
          loginState: this.state.loginStates.LOGEDIN
        }, this.props.logIn(usuarioData.idusuarios, usuarioData.nombre)) : this.loginFail();
      }).catch(error => {
        console.log("se ha producido un error: ", error);
        this.loginFail();
      });
    }

    loginFail() {
      console.log("Usuario o contraseÃ±a no validos");
      this.setState({
        id: 0,
        nombre: '',
        password: '',
        loginState: this.state.loginStates.FAILED
      });
    }

    logOut() {
      this.setState({
        id: 0,
        nombre: '',
        password: '',
        loginState: this.state.loginStates.LOGEDOUT
      });
      this.props.logOut();
      this.actualizaInputs;
    }

    newUser() {
      const usuario = {
        nombre: this.state.nombre,
        password: this.state.password
      };
      const opcions = {
        method: "POST",
        headers: HEADERS,
        body: JSON.stringify(usuario)
      };
      fetch(API_URL, opcions).then(() => this.setState({
        id: 0,
        nombre: '',
        password: ''
      })).catch(error => console.log("se ha producido un error: ", error));
    }

    render() {
      let login = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null);

      if (this.state.loginState != this.state.loginStates.LOGEDIN) {
        login = /*#__PURE__*/_react.default.createElement("div", {
          className: "inputs"
        }, /*#__PURE__*/_react.default.createElement(_reactstrap.Label, {
          for: "nomInput"
        }, "Nombre"), /*#__PURE__*/_react.default.createElement(_reactstrap.Input, {
          id: "nomInput",
          type: "text",
          value: this.state.nombre,
          placeholder: "Nombre",
          onChange: this.actualizaInputs,
          name: "nombre"
        }), /*#__PURE__*/_react.default.createElement(_reactstrap.Label, {
          style: marginTop = '5px',
          for: "emailInput"
        }, "Contrase\xF1a"), /*#__PURE__*/_react.default.createElement(_reactstrap.Input, {
          id: "emailInput",
          type: "password",
          value: this.state.password,
          placeholder: "Contrase\xF1a",
          onChange: this.actualizaInputs,
          name: "password"
        }), /*#__PURE__*/_react.default.createElement("br", null), this.state.loginState == this.state.loginStates.FAILED ? /*#__PURE__*/_react.default.createElement("p", {
          className: "errorLogin"
        }, "Usuario o contrase\xF1a no validos.") : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null), /*#__PURE__*/_react.default.createElement(_reactstrap.Button, {
          color: "success",
          onClick: this.logIn
        }, "Login"));
      } else {
        login = /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_reactstrap.Button, {
          style: {
            marginLeft: "10px"
          },
          color: "danger",
          onClick: this.logOut
        }, "Logout"));
      }

      return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, login);
    }

  }

  var _default = Login;
  exports.default = _default;
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}